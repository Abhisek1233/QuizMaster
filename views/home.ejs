<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page</title>
    <link rel="stylesheet" href="/styleH.css">
    <link rel="icon" href="lit.jpg" sizes="48x48" type="image/jpg">
</head>
<body>
    <header>
        <div class="header-content">
            <div class="logo-left">
                <img src="lit.jpg" alt="LIT Logo">
            </div>
            <h1>Lakshya Institute of Technology</h1>
            <div class="logo-right">
                <img src="lit.jpg" alt="LIT Logo">
            </div>
        </div>
        <h6 class="affiliation">Affiliated to Utkal University</h6>
        <div class="application-wrapper">
            <h2 class="app-title">LIT Quiz Application</h2>
            <div class="applicant-name">
                Applicant’s Name: <span id="applicantName"><%= applicantName %></span>
            </div>
        </div>
    </header>

    <nav>
        <a href="#" onclick="selectSubject('C Programming Quiz')">C Lang.</a>
        <a href="#" onclick="selectSubject('C++ Programming Quiz')">C++ Lang.</a>
        <a href="#" onclick="selectSubject('Java Programming Quiz')">Java Lang.</a>
        <a href="#" onclick="selectSubject('Python Programming Quiz')">Python Lang.</a>
    </nav>

    <section id="quizSection">
        <h3 id="subjectTitle">Select a subject to start the quiz.</h3>
        <form id="quizForm" action="/submit-quiz" method="POST" onsubmit="return handleSubmit();">
            <div id="quizContent">
                <!-- Quiz questions will be dynamically inserted here. -->
            </div>
            <div class="nav-buttons">
                <button type="button" id="prevButton" class="quiz-button" onclick="showPreviousQuestion()" style="display: none;">Previous</button>
                <button type="button" id="nextButton" class="quiz-button" onclick="showNextQuestion()" style="display: none;">Next</button>
                <button type="submit" id="submitButton" class="quiz-button" style="display: none;">Submit</button>
            </div>
        </form>
        <div id="message" style="display: none; text-align: center; font-size: 18px; color: green; margin-top: 20px;"></div>
        <div id="scoreSection" style="display: none; text-align: center; margin-top: 20px;">
            <button type="button" class="score-button" onclick="showScore()">Show Score</button>
            <button type="button" class="evaluate-button" onclick="evaluateAnswers()">Evaluate Answers</button>
            <button type="button" class="back-button" onclick="goBack()">Back to Home</button>
        </div>
        
    </section>

    <footer>
        <p>Designed & Developed By: Abhisek Behera, LIT, Bhubaneswar</p>
    </footer>

    <script>
        const quizQuestions = {
            "C Programming Quiz": [
                { question: "Who is the father of C language?", options: ["Steve Jobs", "James Gosling", "Dennis Ritchie", "Rasmus Lerdorf"], correctAnswer: "Dennis Ritchie" },
                { question: "Which of the following is not a valid C variable name?", options: ["int number;", "float rate;", "int variable_count;", "int $main;"], correctAnswer: "int $main;" },
                { question: "All keywords in C are in ____________", options: ["LowerCase letters", "UpperCase letters", "CamelCase letters", "None of the mentioned"], correctAnswer: "LowerCase letters" },
                { question: "Which of the following is true for variable names in C?", options: ["They can contain alphanumeric characters as well as special characters", "It is not an error to declare a variable to be one of the keywords(like goto, static)", "Variable names cannot start with a digit", "Variable can be of any length"], correctAnswer: "Variable names cannot start with a digit" },
                { question: "Which is valid C expression?", options: ["int my_num = 100,000;", "int my_num = 100000;", "int my num = 1000;", "int $my_num = 10000;"], correctAnswer: "int my_num = 100000;" }
            ],
            "C++ Programming Quiz": [
                { question: "Who invented C++?", options: ["Dennis Ritchie", "Ken Thompson", "Brian Kernighan", "Bjarne Stroustrup"], correctAnswer: "Bjarne Stroustrup" },
                { question: "What is C++?", options: ["C++ is an object oriented programming language", "C++ is a procedural programming language", "C++ supports both procedural and object oriented programming language", "C++ is a functional programming language"], correctAnswer: "C++ supports both procedural and object oriented programming language" },
                { question: "Which of the following is the correct syntax of including a user defined header files in C++?", options: ["#include [userdefined]", "#include “userdefined”", "#include <userdefined.h>", "#include <userdefined>"], correctAnswer: "#include “userdefined”" },
                { question: "Which of the following is used for comments in C++?", options: ["/* comment */", "// comment */", "// comment", "both // comment or /* comment */"], correctAnswer: "both // comment or /* comment */" },
                { question: "Which of the following extension is used for user-defined header file in C++?", options: ["hg", "cpp", "h", "hf"], correctAnswer: "h" }
            ],
            "Java Programming Quiz": [
                { question: "Who is the father of Java?", options: ["James Gosling", "Dennis Ritchie", "Bjarne Stroustrup", "Ken Thompson"], correctAnswer: "James Gosling" },
                { question: "Which of the following is not a feature of Java?", options: ["Object Oriented", "Use of pointers", "Portable", "Dynamic and Extensible"], correctAnswer: "Use of pointers" },
                { question: "Which component is used to compile, debug and execute Java programs?", options: ["JRE", "JIT", "JDK", "JVM"], correctAnswer: "JDK" },
                { question: "Which of these cannot be used for a variable name in Java?", options: ["identifier & keyword", "identifier", "keyword", "none of the mentioned"], correctAnswer: "keyword" },
                { question: "Which environment variable is used to set the Java path?", options: ["MAVEN_Path", "JavaPATH", "JAVA", "JAVA_HOME"], correctAnswer: "JAVA_HOME" }
            ],
            "Python Programming Quiz": [
                { question: "Who developed Python Programming Language?", options: ["Wick van Rossum", "Rasmus Lerdorf", "Guido van Rossum", "Niene Stom"], correctAnswer: "Guido van Rossum" },
                { question: "Which type of Programming does Python support?", options: ["object-oriented programming", "structured programming", "functional programming", "all of the mentioned"], correctAnswer: "all of the mentioned" },
                { question: "Is Python case sensitive when dealing with identifiers?", options: ["no", "yes", "machine dependent", "none of the mentioned"], correctAnswer: "yes" },
                { question: "Which of the following is the correct extension of the Python file?", options: [".python", ".pl", ".py", ".p"], correctAnswer: ".py" },
                { question: "What is the maximum possible length of an identifier in Python?", options: ["79 characters", "31 characters", "63 characters", "none of the mentioned"], correctAnswer: "none of the mentioned" }
            ]
        };

        let currentSubject = null;
        let currentQuestionIndex = 0;
        let selectedAnswers = [];
        let correctAnswers = [];

        function selectSubject(subject) {
            currentSubject = subject;
            currentQuestionIndex = 0;
            selectedAnswers = [];
            displayQuestion();
        }

        function displayQuestion() {
            const subjectTitle = document.getElementById('subjectTitle');
            const quizContent = document.getElementById('quizContent');
            const prevButton = document.getElementById('prevButton');
            const nextButton = document.getElementById('nextButton');
            const submitButton = document.getElementById('submitButton');

            if (!currentSubject) {
                subjectTitle.textContent = 'Select a subject to start the quiz.';
                quizContent.innerHTML = '';
                prevButton.style.display = 'none';
                nextButton.style.display = 'none';
                submitButton.style.display = 'none';
                return;
            }

            const questions = quizQuestions[currentSubject];
            if (currentQuestionIndex < questions.length) {
                const question = questions[currentQuestionIndex];
                const optionsHtml = question.options.map((option) => 
                    `<label class="quiz-option">
                        <input type="radio" name="question${currentQuestionIndex}" value="${option}">
                        ${option}
                    </label>`
                ).join('');
                
                subjectTitle.textContent = currentSubject;
                quizContent.innerHTML = ` 
                    <div class="quiz-question">
                        <p>${question.question}</p>
                        ${optionsHtml}
                    </div>
                `;

                prevButton.style.display = currentQuestionIndex > 0 ? 'inline-block' : 'none';
                nextButton.style.display = currentQuestionIndex < questions.length - 1 ? 'inline-block' : 'none';
                submitButton.style.display = currentQuestionIndex === questions.length - 1 ? 'inline-block' : 'none';
            }
        }

        function showNextQuestion() {
            saveSelectedAnswer();
            if (currentQuestionIndex < quizQuestions[currentSubject].length - 1) {
                currentQuestionIndex++;
                displayQuestion();
            }
        }

        function showPreviousQuestion() {
            saveSelectedAnswer();
            if (currentQuestionIndex > 0) {
                currentQuestionIndex--;
                displayQuestion();
            }
        }

        function saveSelectedAnswer() {
            const questionRadios = document.getElementsByName(`question${currentQuestionIndex}`);
            let selectedAnswer = '';
            for (let radio of questionRadios) {
                if (radio.checked) {
                    selectedAnswer = radio.value;
                    break;
                }
            }
            selectedAnswers[currentQuestionIndex] = selectedAnswer;
        }

        function handleSubmit() {
            saveSelectedAnswer();

            const questions = quizQuestions[currentSubject];
            correctAnswers = questions.map(q => q.correctAnswer);

            const message = document.getElementById('message');
            message.textContent = 'Successfully Submitted!';
            message.style.display = 'block';

            document.getElementById('quizForm').style.display = 'none';
            document.getElementById('prevButton').style.display = 'none';
            document.getElementById('nextButton').style.display = 'none';
            document.getElementById('submitButton').style.display = 'none';
            document.getElementById('scoreSection').style.display = 'block';

            return false; // Prevent the form from submitting the usual way
        }

        function showScore() {
            let score = 0;
            selectedAnswers.forEach((answer, index) => {
                if (answer === correctAnswers[index]) score++;
            });
            alert('Your Score: ' + score + '/' + correctAnswers.length);
        }

        function evaluateAnswers() {
            let evaluation = '';
            selectedAnswers.forEach((answer, index) => {
                evaluation += `Q${index + 1}: ${answer === correctAnswers[index] ? 'Correct' : 'Wrong'}\n`;
            });
            alert(evaluation);
        }

        function goBack() {
            window.location.href = '/';
        }


        function handleSubmit() {
    saveSelectedAnswer();

    const questions = quizQuestions[currentSubject];
    correctAnswers = questions.map(q => q.correctAnswer);

    let score = 0;
    selectedAnswers.forEach((answer, index) => {
        if (answer === correctAnswers[index]) score++;
    });

    const message = document.getElementById('message');
    message.textContent = 'Successfully Submitted!';
    message.style.display = 'block';

    document.getElementById('quizForm').style.display = 'none';
    document.getElementById('prevButton').style.display = 'none';
    document.getElementById('nextButton').style.display = 'none';
    document.getElementById('submitButton').style.display = 'none';
    document.getElementById('scoreSection').style.display = 'block';

    // Send quiz results to the server
    fetch('/submit-quiz', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            subject: currentSubject,
            score: score,
            totalQuestions: questions.length
        })
    })
    .then(response => response.text())
    .then(data => {
        console.log(data);
    })
    .catch(error => {
        console.error('Error:', error);
    });

    return false; // Prevent the form from submitting the usual way
}


    </script>
</body>
</html>
